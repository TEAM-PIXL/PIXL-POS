<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>team-pixl.com</groupId>
    <artifactId>PIXL-POS</artifactId>
    <version>1.0</version>
    <name>PIXL-POS</name>

    <properties>
        <junit.version>5.8.2</junit.version>
        <!-- Set the Java version property -->
        <java.version>21</java.version>
        <!-- Set the JavaFX version property -->
        <javafx.version>21</javafx.version>
        <!-- Maven Source and Target Compiler Versions -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- JavaFX dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- JUnit dependencies -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- JUnit Jupiter Engine for running tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- JUnit Platform Commons, required by the JUnit Platform -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>1.8.2</version>
            <scope>compile</scope>
        </dependency>

        <!-- SQLite JDBC -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.41.2.2</version>
        </dependency>

        <!-- bcrypt for hashing -->
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>

        <!-- Spring Security Crypto for additional security features -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
            <version>5.6.4</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.fxml</include>
                    <include>**/*.css</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>

            <!-- JavaFX Maven Plugin -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <mainClass>teampixl.com.pixlpos.application.POSApplicationLauncher</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Maven Surefire Plugin for running tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <argLine>--add-exports org.junit.platform.commons/org.junit.platform.commons.util=ALL-UNNAMED --add-exports org.junit.platform.commons/org.junit.platform.commons.logging=ALL-UNNAMED</argLine>
                </configuration>
            </plugin>

            <!-- Maven Javadoc Plugin to generate Javadocs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.10.0</version>
                <configuration>
                    <doclint>none</doclint>
                    <show>protected</show>
                    <detectJavaApiLink>true</detectJavaApiLink>
                    <sourcepath>${basedir}/src/main/java</sourcepath>
                    <!--suppress UnresolvedMavenProperty -->
                    <additionalJOptions>${modulepath.option}</additionalJOptions>
                    <outputDirectory>${project.build.directory}/site</outputDirectory>
                </configuration>
            </plugin>

            <!-- Maven Dependency Plugin to handle project dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Java jar executable plugin maven -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>teampixl.com.pixlpos.application.POSApplicationLauncher</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Maven Resources Plugin to manage resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven assembly for cross-platform compilation -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>teampixl.com.pixlpos.application.POSApplicationLauncher</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven shade plugin for dependency reduced runtime pom.xml -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>teampixl.com.pixlpos.application.POSApplicationLauncher</mainClass>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <!-- Exclude JavaFX classes from being shaded -->
                                        <exclude>javafx/**</exclude>
                                        <exclude>com/sun/javafx/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Exec-plugin for easy java executable compilation @ local -->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>exec-maven-plugin</artifactId>-->
<!--                <version>3.1.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>windows-executable</id>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <executable>cmd</executable>-->
<!--                            <arguments>-->
<!--                                <argument>/c</argument>-->
<!--                                <argument>echo Building Windows Executable</argument>-->
<!--                                <argument>&amp;&amp;</argument>-->
<!--                                <argument>mkdir</argument>-->
<!--                                <argument>target\windows</argument>-->
<!--                                <argument>&amp;&amp;</argument>-->
<!--                                <argument>copy</argument>-->
<!--                                <argument>target\${project.build.finalName}.jar</argument>-->
<!--                                <argument>target\windows\${project.build.finalName}.exe</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>linux-executable</id>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <executable>sh</executable>-->
<!--                            <arguments>-->
<!--                                <argument>-c</argument>-->
<!--                                <argument>echo Building Linux Executable</argument>-->
<!--                                <argument>&amp;&amp;</argument>-->
<!--                                <argument>mkdir -p target/linux</argument>-->
<!--                                <argument>&amp;&amp;</argument>-->
<!--                                <argument>cp target/${project.build.finalName}.jar target/linux/${project.build.finalName}.sh</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>mac-executable</id>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <executable>sh</executable>-->
<!--                            <arguments>-->
<!--                                <argument>-c</argument>-->
<!--                                <argument>echo Building Mac Executable</argument>-->
<!--                                <argument>&amp;&amp;</argument>-->
<!--                                <argument>mkdir -p target/mac</argument>-->
<!--                                <argument>&amp;&amp;</argument>-->
<!--                                <argument>cp target/${project.build.finalName}.jar target/mac/${project.build.finalName}.app</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>create-windows-installer</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>jpackage</executable>
                            <arguments>
                                <argument>--type</argument>
                                <argument>msi</argument>
                                <argument>--input</argument>
                                <argument>${project.build.directory}</argument>
                                <argument>--dest</argument>
                                <argument>${project.build.directory}/installer</argument>
                                <argument>--name</argument>
                                <argument>PIXL-POS</argument>
                                <argument>--app-version</argument>
                                <argument>1.0</argument>
                                <argument>--main-jar</argument>
                                <argument>PIXL-POS-1.0-jar-with-dependencies.jar</argument>
                                <argument>--main-class</argument>
                                <argument>teampixl.com.pixlpos.application.POSApplicationLauncher</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <properties>
                <modulepath.option>--module-path ${basedir}/target/classes</modulepath.option>
            </properties>
        </profile>

        <profile>
            <id>ci</id>
            <activation>
                <property>
                    <name>env.CI</name>
                </property>
            </activation>
            <properties>
                <modulepath.option></modulepath.option>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>maven-central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>openjfx</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>codehaus</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>apache-snapshots</id>
            <url>https://repository.apache.org/snapshots</url>
        </repository>
        <repository>
            <id>codehaus-mojo</id>
            <url>https://repository.codehaus.org</url>
        </repository>
    </repositories>
</project>

